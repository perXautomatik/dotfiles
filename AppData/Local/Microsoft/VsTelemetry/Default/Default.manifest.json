{
  "version": "57",
  "etag": "0x8D9AAB05DF587BC",
  "throttlingThresholdPerWindow": 2000,
  "throttlingTimerResetInSeconds": 0.0,
  "rules": [
    {
      "name": "SuppressUTCChannel",
      "when": {
        "not": {
          "event": "vs/telemetryapi/session/initialized"
        }
      },
      "do": [
        {
          "excludeForChannels": [
            "aiasimov"
          ]
        },
        {
          "route": [
            {
              "channel": "aivortex",
              "args": {
                "datapointId": 1,
                "dataType": 1,
                "parameterName": "dummy",
                "truncationRule": 0
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Route one event to UTC channel",
      "when": {
        "event": "vs/telemetryapi/session/initialized"
      },
      "do": [
        {
          "route": [
            {
              "channel": "aiasimov",
              "args": {
                "datapointId": 1,
                "dataType": 1,
                "parameterName": "dummy",
                "truncationRule": 0
              }
            },
            {
              "channel": "aivortex",
              "args": {
                "datapointId": 1,
                "dataType": 1,
                "parameterName": "dummy",
                "truncationRule": 0
              }
            },
            {
              "channel": "ai",
              "args": {
                "datapointId": 1,
                "dataType": 1,
                "parameterName": "dummy",
                "truncationRule": 0
              }
            }
          ]
        }
      ]
    },
    {
      "name": "SuppressVSConnectPiiBreach_Default_01",
      "when": {
        "and": [
          {
            "event": "vs/hub/servicemodule/vsconnect/*"
          },
          {
            "property": "vsconnect.userid",
            "value": {
              "exists": true
            }
          }
        ]
      },
      "do": [
        {
          "excludeForChannels": [
            "ai",
            "aiasimov",
            "aivortex"
          ]
        }
      ]
    },
    {
      "name": "SuppressNoisyVSHUB_Default_01",
      "when": {
        "or": [
          {
            "event": "vs/hub/servicemodule/pubsub/request"
          },
          {
            "event": "vs/hub/servicemodule/pubsub/publishmessage"
          },
          {
            "event": "vs/hub/servicemodule/microsoft.visualstudio.shell.hubservicemodule/request"
          },
          {
            "event": "vs/hub/servicemodule/datawarehousemodule/request"
          },
          {
            "and": [
              {
                "event": "vs/hub/coremodule/controller/session*"
              },
              {
                "property": "vs.hub.controller.command",
                "value": {
                  "eq": "locate"
                }
              }
            ]
          },
          {
            "and": [
              {
                "event": "vs/hub/servicemodule/settingsservicemodule*"
              },
              {
                "property": "vs.hub.result.type",
                "value": {
                  "eq": "Success"
                }
              }
            ]
          },
          {
            "and": [
              {
                "event": "vs/hub/servicemodule/settingsservicemodule/request*"
              },
              {
                "or": [
                  {
                    "property": "vs.hub.request.httpstatuscode",
                    "value": {
                      "eq": "404"
                    }
                  },
                  {
                    "property": "vs.hub.request.httpstatuscode",
                    "value": {
                      "eq": "409"
                    }
                  }
                ]
              }
            ]
          },
          {
            "event": "vs/hub/servicemodule/vsconnect/workspace.backgroundsync*"
          },
          {
            "event": "vs/hub/servicemodule/vsconnect/localdeviceworkspace/sync/success*"
          }
        ]
      },
      "do": [
        {
          "excludeForChannels": [
            "ai",
            "aiasimov",
            "aivortex"
          ]
        }
      ]
    },
    {
      "name": "PiiVsFeedbackProperty",
      "when": {
        "property": "vs.feedback.jsonpayload",
        "value": {
          "exists": true
        }
      },
      "do": [
        {
          "piiProperties": [
            "vs.feedback.jsonpayload"
          ]
        }
      ]
    },
    {
      "name": "PiiTypingStat",
      "when": {
        "event": "vs/perf/typingstats"
      },
      "do": [
        {
          "piiProperties": [
            "vs.perf.typingstats.editortype"
          ]
        }
      ]
    },
    {
      "name": "ExcludePiiEventFromPartnerTeam_01",
      "when": {
        "event": "deviceemulator/xde/sendkeyboardevent"
      },
      "do": [
        {
          "excludeForChannels": [
            "aiasimov",
            "ai",
            "aivortex"
          ]
        }
      ]
    },
    {
      "name": "PiiRemoteControlDownloadError",
      "when": {
        "event": "vs/remotecontrol/downloadfile"
      },
      "do": [
        {
          "piiProperties": [
            "vs.remotecontrol.downloadfile.errormessage"
          ]
        }
      ]
    },
    {
      "name": "ExcludeDynTelStatsEvent",
      "when": {
        "event": "vs/telemetryapi/dynamictelemetry/stats"
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "PiiSetupEngineCatalogLogPath",
      "when": {
        "event": "vs/setupengine/catalog/load"
      },
      "do": [
        {
          "piiProperties": [
            "vs.setupengine.cataloglogpath"
          ]
        }
      ]
    },
    {
      "name": "PiiDocumentPhysicalViewProperty",
      "when": {
        "property": "vs.ide.document.physicalview",
        "value": {
          "exists": true
        }
      },
      "do": [
        {
          "piiProperties": [
            "vs.ide.document.physicalview"
          ]
        }
      ]
    },
    {
      "name": "PiiProjectBuild",
      "when": {
        "event": "vs/solution/perf/projectbuild"
      },
      "do": [
        {
          "piiProperties": [
            "vs.solution.perf.projectbuild.configuration",
            "vs.solution.perf.projectbuild.platform"
          ]
        }
      ]
    },
    {
      "name": "PiiDesignToolsPackageAndDeploy",
      "when": {
        "or": [
          {
            "event": "vs/designtools/packageanddeploy/deploy"
          },
          {
            "event": "vs/designtools/packageanddeploy/bootstrapasync-deploying"
          },
          {
            "event": "vs/designtools/packageanddeploy/bootstrapasync-debugging"
          },
          {
            "event": "vs/designtools/packageanddeploy/bootstrapasync-diagnostics"
          },
          {
            "event": "vs/designtools/packageanddeploy/connectto-device"
          },
          {
            "event": "vs/designtools/packageanddeploy/deployimmersiveproject/deploymentrobustness"
          }
        ]
      },
      "do": [
        {
          "piiProperties": [
            "vs.designtools.packageanddeploy..remotedevice.ipaddress",
            "vs.designtools.packageanddeploy..bootstrapping.target",
            "vs.designtools.packageanddeploy..bootstrapping.address",
            "vs.designtools.packageanddeploy..connection.deviceid",
            "vs.designtools.packageanddeploy..deploy.deviceid",
            "vs.designtools.packageanddeploy..target.name",
            "vs.designtools.packageanddeploy.deployimmersiveproject.remotedevice.ipaddress",
            "vs.designtools.packageanddeploy.deployimmersiveproject.bootstrapping.target",
            "vs.designtools.packageanddeploy.deployimmersiveproject.bootstrapping.address",
            "vs.designtools.packageanddeploy.deployimmersiveproject.connection.deviceid",
            "vs.designtools.packageanddeploy.deployimmersiveproject.deploy.deviceid",
            "vs.designtools.packageanddeploy.deployimmersiveproject.target.name"
          ]
        }
      ]
    },
    {
      "name": "SuppressNoisyRemoteFileDownloadEvent",
      "when": {
        "and": [
          {
            "event": "vs/remotecontrol/downloadfile"
          },
          {
            "property": "vs.remotecontrol.downloadfile.fullurl",
            "value": {
              "endsWith": "extmgr/compatlist/compatibilitylist.xml"
            }
          }
        ]
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "SuppressNoisyPubSubEvents",
      "when": {
        "event": "vs/hub/servicemodule/pubsub/request"
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "PiiOldFileNameExtension",
      "when": {
        "and": [
          {
            "property": "vs.solution.perf.projectload.filenameextension",
            "value": {
              "exists": true
            }
          },
          {
            "property": "context.default.vs.core.buildnumber",
            "value": {
              "lt": 26507.0
            }
          }
        ]
      },
      "do": [
        {
          "piiProperties": [
            "vs.solution.perf.projectload.filenameextension"
          ]
        }
      ]
    },
    {
      "name": "PiiSqlProperties",
      "when": {
        "or": [
          {
            "event": "sql/ssms/autoparameterization/error/execution_error"
          },
          {
            "event": "sql/ssms/autoparameterization/error/codesense_error"
          },
          {
            "event": "sql/ssms/objectexplorer/genericerror"
          }
        ]
      },
      "do": [
        {
          "piiProperties": [
            "exception_message",
            "stack_trace",
            "sql.ssms.objectexplorernonfatalerror.message"
          ]
        }
      ]
    },
    {
      "name": "SuppressIdentityEvaluationValues",
      "when": {
        "event": "vs/telemetryapi/identity/evaluationvalues"
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "SuppressTeamFoundationPII",
      "when": {
        "event": "vs/teamfoundation/git/command/execute/push/fault"
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "SuppressPIILeakageEventsForWebAndAzureTools",
      "when": {
        "or": [
          {
            "event": "vs/azuretools/docker/beginwatchingdockerartifactfiles"
          },
          {
            "event": "vs/azuretools/containertools/startcontainererror"
          },
          {
            "event": "vs/azuretools/containertools/projectwarmupfailure"
          },
          {
            "event": "vs/azuretools/containertools/dockerrunerror"
          },
          {
            "event": "vs/azuretools/containertools/dockerbuilderror"
          },
          {
            "event": "vs/azuretools/docker/dockercomposeerror"
          },
          {
            "event": "vs/azuretools/containertools/projectwarmupfailure"
          }
        ]
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "SuppressDesignToolsChangeDocumentNode_CredLeak",
      "when": {
        "event": "vs/designtools/designsurface/change-documentnode"
      },
      "do": [
        {
          "piiProperties": [
            "vs.designtools.designsurface.documentnodechange.oldvalue",
            "vs.designtools.designsurface.documentnodechange.newvalue"
          ]
        }
      ]
    },
    {
      "name": "SuppressDesignToolsErrorList_CredLeak",
      "when": {
        "event": "vs/designtools/errorlist/*"
      },
      "do": [
        {
          "piiProperties": [
            "vs.designtools.errorlist.errormessage"
          ]
        }
      ]
    },
    {
      "name": "SuppressDesignToolsBootstrappersBuild_CredLeak",
      "when": {
        "event": "vs/designtools/installerprojects/bootstrappersbuild"
      },
      "do": [
        {
          "piiProperties": [
            "vs.installerprojects.bootstrappersbuild.warnings",
            "vs.installerprojects.bootstrappersbuild.errors"
          ]
        }
      ]
    },
    {
      "name": "PII_ConnectedFwLinkResolution",
      "when": {
        "event": "vs/ide/connected/retry-fwlinkresolution"
      },
      "do": [
        {
          "piiProperties": [
            "vs.ide.connected.fwlinkresolutionretryinfooriginalurl"
          ]
        }
      ]
    },
    {
      "name": "PIIPropertyForSetup_CredLeak",
      "when": {
        "event": "vs/setup/setuplauncher"
      },
      "do": [
        {
          "piiProperties": [
            "vs.setup.setuplauncher.matchedbundle.actions"
          ]
        }
      ]
    },
    {
      "name": "PIIForVCProject",
      "when": {
        "event": "vs/vc/project/cmake/project/parse/start"
      },
      "do": [
        {
          "piiProperties": [
            "vs.vc.project.generatoradditionalswitches",
            "vs.vc.project.ctestadditionalswitches",
            "vs.vc.project.nativebuildtoolswitches"
          ]
        }
      ]
    },
    {
      "name": "SuppressSchemaLoadFailureWebTools_CredLeak",
      "when": {
        "event": "vs/webtools/languages/json/schemaloadfailure"
      },
      "do": [
        {
          "piiProperties": [
            "vs.webtools.languages.json.message",
            "vs.webtools.languages.json.exception",
            "vs.webtools.languages.json.innerexception"
          ]
        }
      ]
    },
    {
      "name": "SuppressWebToolsHealth_CredLeak",
      "when": {
        "event": "vs/webtools/health/*"
      },
      "do": [
        {
          "piiProperties": [
            "vs.webtools.health.servicereference.failurereason",
            "vs.webtools.health.runproject.failurereason"
          ]
        }
      ]
    },
    {
      "name": "PIIWillowProperty",
      "when": {
        "event": "vs/willow/show-errordialog"
      },
      "do": [
        {
          "piiProperties": [
            "vs.willow.errorname"
          ]
        }
      ]
    },
    {
      "name": "SuppressMorePIILeakageEventsForAzureTools",
      "when": {
        "or": [
          {
            "event": "vs/azuretools/containertoolswindow/openfilefailure"
          },
          {
            "event": "vs/azuretools/containertoolswindow/operationexception"
          },
          {
            "event": "vs/azuretools/containertoolswindow/runimagefailure"
          },
          {
            "event": "vs/azuretools/docker/projectwarmupfailure"
          },
          {
            "event": "vs/azuretools/docker/scaffoldingfailure"
          },
          {
            "event": "vs/azuretools/containertoolswindow/startcontainerfailure"
          }
        ]
      },
      "do": [
        {
          "piiProperties": [
            "reserved.datamodel.fault.exception.message"
          ]
        }
      ]
    },
    {
      "name": "PIIVSExtensibility_Creds",
      "when": {
        "event": "vs/platform/extensibilityhosting/getmefexportproviderfactoryfailed"
      },
      "do": [
        {
          "piiProperties": [
            "reserved.datamodel.fault.exception.fusionlog"
          ]
        }
      ]
    },
    {
      "name": "PIIWinForms_Creds",
      "when": {
        "or": [
          {
            "event": "vs/winforms/designer/load-designer-failure"
          },
          {
            "event": "vs/winforms/ipc/request-failure"
          }
        ]
      },
      "do": [
        {
          "piiProperties": [
            "reserved.datamodel.fault.exception.message"
          ]
        }
      ]
    },
    {
      "name": "PIIVS_AnyCode",
      "when": {
        "event": "vs/workspace/index"
      },
      "do": [
        {
          "piiProperties": [
            "vs.workspace.extensions"
          ]
        }
      ]
    },
    {
      "name": "PIILiveShare_Client_Agent_Log_Token",
      "when": {
        "or": [
          {
            "event": "vs/liveshare/share-workspace-fault"
          },
          {
            "event": "vs/liveshare/accept-reject-guest-fault"
          },
          {
            "event": "vs/liveshare/rpc-sync-slow-fault"
          },
          {
            "event": "vs/liveshare/dispose-collab-service-fault"
          },
          {
            "event": "vs/liveshare/solutionview/innernode-process-fault"
          },
          {
            "event": "vs/liveshare/default-signin-fault"
          },
          {
            "event": "vs/liveshare/token-expired-presence-fault"
          },
          {
            "event": "vs/liveshare/agent-activation-fault"
          },
          {
            "event": "vs/liveshare/activate-extension-fault"
          },
          {
            "event": "vs/liveshare/solutionview/file-operation-fault"
          },
          {
            "event": "vs/liveshare/join-workspace-fault"
          },
          {
            "event": "vs/liveshare/download-file-fault"
          },
          {
            "event": "vs/liveshare/viewlet/audio-viewlet-initialize-fault"
          },
          {
            "event": "vs/liveshare/solutionview/property-process-fault"
          },
          {
            "event": "vs/liveshare/search/text-search-fault"
          },
          {
            "event": "vs/liveshare/viewlet/sharedserver-update-fault"
          },
          {
            "event": "vs/liveshare/viewlet/sharedterminal-update-fault"
          },
          {
            "event": "vs/liveshare/lost-buffersynchronization-fault"
          },
          {
            "event": "vs/liveshare/solutionview/rootnode-process-fault"
          },
          {
            "event": "vs/liveshare/determine-workspaceroot-fault"
          },
          {
            "event": "vs/liveshare/configure-user-account-command-fault"
          },
          {
            "event": "vs/liveshare/solutionview/file-open-fault"
          },
          {
            "event": "vs/liveshare/remove-user-command-fault"
          },
          {
            "event": "vs/liveshare/viewlet/audio-start-fault"
          },
          {
            "event": "vs/liveshare/viewlet/audio-participants-update-fault"
          },
          {
            "event": "vs/liveshare/startcollaboration-fault"
          },
          {
            "event": "vs/liveshare/audiocall-settings-command-fault"
          }
        ]
      },
      "do": [
        {
          "piiProperties": [
            "vs.liveshare.agentlog",
            "vs.liveshare.clientlog"
          ]
        }
      ]
    },
    {
      "name": "PII_NonFatalWatson",
      "when": {
        "event": "vs/ide/vbcs/nonfatalwatson"
      },
      "do": [
        {
          "piiProperties": [
            "reserved.datamodel.fault.exception.message"
          ]
        }
      ]
    },
    {
      "name": "PII_SearchBarViolation",
      "when": {
        "event": "vs/ide/search/completed"
      },
      "do": [
        {
          "piiProperties": [
            "vs.ide.search.completed.searchtermstokens",
            "vs.ide.search.completed.searchtermswhole"
          ]
        }
      ]
    },
    {
      "name": "PII_RestoreDocumentViolation",
      "when": {
        "event": "vs/solution/perf/load"
      },
      "do": [
        {
          "piiProperties": [
            "vs.solution.perf.load.documentrestoredextensionlist"
          ]
        }
      ]
    },
    {
      "name": "PII_EditorViolation",
      "when": {
        "or": [
          {
            "and": [
              {
                "event": "vs/platform/editor/textview/restoreoutlining"
              },
              {
                "property": "vs.platform.editor.textview.restoreoutlining.extension",
                "value": {
                  "exists": true
                }
              }
            ]
          },
          {
            "and": [
              {
                "event": "vs/platform/editor/textview/setuplanguageservice"
              },
              {
                "property": "vs.platform.editor.textview.setuplanguageservice.extension",
                "value": {
                  "exists": true
                }
              }
            ]
          },
          {
            "and": [
              {
                "event": "vs/platform/editor/bufferload"
              },
              {
                "property": "vs.platform.editor.bufferload.document.extension",
                "value": {
                  "exists": true
                }
              }
            ]
          },
          {
            "and": [
              {
                "event": "vs/platform/editor/bufferload/notifyoftextbufferload"
              },
              {
                "property": "vs.platform.editor.bufferload.document.extension",
                "value": {
                  "exists": true
                }
              }
            ]
          }
        ]
      },
      "do": [
        {
          "excludeForChannels": [
            "*"
          ]
        }
      ]
    },
    {
      "name": "PII_customizepwalaunchoptions",
      "when": {
        "event": "vs/bpt/diagnostics/chromepinezorro/debugger/customizepwalaunchoptions-fault"
      },
      "do": [
        {
          "piiProperties": [
            "reserved.datamodel.fault.description"
          ]
        }
      ]
    },
    {
      "name": "PII_DocumentPerfCreate",
      "when": {
        "event": "vs/ide/document/perf/create"
      },
      "do": [
        {
          "piiProperties": [
            "vs.ide.document.extension"
          ]
        }
      ]
    },
    {
      "name": "Remediate_tabcountpermodeperfiletype",
      "when": {
        "event": "vs/platform/windowmanagement/documenttabs"
      },
      "do": [
        {
          "piiProperties": [
            "vs.platform.windowmanagement.documenttabs.tabcountpermodeperfiletype"
          ]
        }
      ]
    }
  ]
}