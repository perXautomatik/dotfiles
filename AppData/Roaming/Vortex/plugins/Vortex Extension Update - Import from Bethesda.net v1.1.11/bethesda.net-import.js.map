{"version":3,"sources":["webpack://bethesda.net-import/webpack/bootstrap","webpack://bethesda.net-import/./node_modules/nanoid/format.browser.js","webpack://bethesda.net-import/./node_modules/shortid/index.js","webpack://bethesda.net-import/./node_modules/shortid/lib/alphabet.js","webpack://bethesda.net-import/./node_modules/shortid/lib/build.js","webpack://bethesda.net-import/./node_modules/shortid/lib/generate.js","webpack://bethesda.net-import/./node_modules/shortid/lib/index.js","webpack://bethesda.net-import/./node_modules/shortid/lib/is-valid.js","webpack://bethesda.net-import/./node_modules/shortid/lib/random/random-byte-browser.js","webpack://bethesda.net-import/./node_modules/shortid/lib/random/random-from-seed.js","webpack://bethesda.net-import/./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://bethesda.net-import/./src/index.ts","webpack://bethesda.net-import/./src/util/bethesdaImportUtil.ts","webpack://bethesda.net-import/./src/util/import.ts","webpack://bethesda.net-import/./src/views/BethesdaImport.tsx","webpack://bethesda.net-import/external \"bluebird\"","webpack://bethesda.net-import/external \"https\"","webpack://bethesda.net-import/external \"modmeta-db\"","webpack://bethesda.net-import/external \"path\"","webpack://bethesda.net-import/external \"react\"","webpack://bethesda.net-import/external \"react-bootstrap\"","webpack://bethesda.net-import/external \"react-i18next\"","webpack://bethesda.net-import/external \"react-redux\"","webpack://bethesda.net-import/external \"vortex-api\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCa;AACb,iBAAiB,mBAAO,CAAC,wDAAa;;;;;;;;;;;;;ACDzB;;AAEb,qBAAqB,mBAAO,CAAC,wFAA2B;;AAExD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGa;;AAEb,eAAe,mBAAO,CAAC,0DAAY;AACnC,eAAe,mBAAO,CAAC,0DAAY;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC7Ca;;AAEb,eAAe,mBAAO,CAAC,0DAAY;AACnC,aAAa,mBAAO,CAAC,sFAAsB;AAC3C,aAAa,mBAAO,CAAC,8DAAe;;AAEpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpBa;;AAEb,eAAe,mBAAO,CAAC,0DAAY;AACnC,YAAY,mBAAO,CAAC,oDAAS;AAC7B,cAAc,mBAAO,CAAC,0DAAY;;AAElC;AACA;AACA;AACA;AACA,sBAAsB,mBAAO,CAAC,8FAA0B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Da;AACb,eAAe,mBAAO,CAAC,0DAAY;;AAEnC;AACA;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;;;;;;;;;;;;;ACda;;AAEb,8EAA8E;;AAE9E;;AAEA;AACA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpBa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBa;;AAEb;;;;;;;;;;;;;ACFa;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,8BAAY;AACzC,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,yCAAyC,mBAAO,CAAC,8DAAwB;AACzE;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;;;;AC3Ca;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,qBAAqB,mBAAO,CAAC,8BAAY;AACzC,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,mCAAmC,mBAAO,CAAC,0BAAU;AACrD,2BAA2B,mBAAO,CAAC,oBAAO;AAC1C,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,aAAa;AAC3E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,SAAS;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,2CAA2C;AAC3C,uEAAuE,GAAG;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC9Ga;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,mCAAmC,mBAAO,CAAC,0BAAU;AACrD,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,qBAAqB,mBAAO,CAAC,8BAAY;AACzC,kBAAkB,mBAAO,CAAC,gDAAS;AACnC,qBAAqB,mBAAO,CAAC,8BAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,GAAG,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8BAA8B;AACzE,SAAS;AACT;AACA;AACA,yBAAyB,oDAAoD;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qBAAqB,0HAA0H;AAC/I;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,8BAA8B,GAAG,OAAO,GAAG,YAAY;AAClF,mDAAmD,YAAY;AAC/D,+CAA+C,YAAY;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,+BAA+B;AAClH;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,0BAA0B,cAAc,OAAO;AAChG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ka;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,8BAAY;AACzC,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C,sBAAsB,mBAAO,CAAC,gCAAa;AAC3C,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,2BAA2B,mBAAO,CAAC,oBAAO;AAC1C,0BAA0B,mBAAO,CAAC,wCAAiB;AACnD,6CAA6C,mBAAO,CAAC,oEAA4B;AACjF,iCAAiC,mBAAO,CAAC,4CAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA,mBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,4DAA4D;AAC3E,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,IAAI;AACnB,eAAe,yCAAyC;AACxD;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,oBAAoB;AACnC;AACA,yDAAyD,gEAAgE;AACzH;AACA;AACA;AACA;AACA;AACA,+DAA+D,6CAA6C;AAC5G,+DAA+D,4DAA4D;AAC3H,+DAA+D,oDAAoD;AACnH;AACA;AACA,eAAe,gEAAgE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,eAAe,aAAa;AAC5B,yDAAyD,2BAA2B,mBAAmB,EAAE;AACzG,0DAA0D,mFAAmF;AAC7I,0DAA0D,4FAA4F;AACtJ,0DAA0D,yFAAyF;AACnJ,0DAA0D,uFAAuF;AACjJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uCAAuC;AACnF,uDAAuD,iCAAiC;AACxF;AACA;AACA,eAAe,IAAI;AACnB,eAAe,8CAA8C;AAC7D;AACA;AACA,6CAA6C,8BAA8B;AAC3E,wCAAwC,gBAAgB,UAAU,sBAAsB;AACxF;AACA;AACA,oEAAoE,MAAM,YAAY,IAAI,wBAAwB,WAAW,8BAA8B,EAAE;AAC7J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS,gCAAgC,EAAE;AAC7F;AACA,6DAA6D,8OAA8O;AAC3S,6DAA6D,iMAAiM;AAC9P;AACA;AACA,eAAe,IAAI;AACnB,eAAe,WAAW;AAC1B;AACA;AACA;AACA,4CAA4C,yCAAyC;AACrF,wEAAwE,KAAK,IAAI,WAAW,oBAAoB,EAAE;AAClH,gEAAgE,sBAAsB,KAAK,IAAI;AAC/F;AACA;AACA;AACA,eAAe,IAAI;AACnB,eAAe,wBAAwB;AACvC,4CAA4C,SAAS,0EAA0E,EAAE;AACjI,qDAAqD,iIAAiI;AACtL;AACA;AACA,eAAe,IAAI;AACnB,eAAe,gBAAgB;AAC/B,4CAA4C,yCAAyC;AACrF,4CAA4C,8BAA8B;AAC1E,wDAAwD,2BAA2B;AACnF;AACA;AACA,6CAA6C,8BAA8B;AAC3E,4DAA4D,2BAA2B;AACvF;AACA,6CAA6C,oCAAoC;AACjF;AACA;AACA;AACA,eAAe,IAAI;AACnB,eAAe,gBAAgB;AAC/B;AACA,gDAAgD,gBAAgB,OAAO,sCAAsC;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG,gBAAgB,OAAO,GAAG,oBAAoB,GAAG,wEAAwE,SAAS,IAAI,WAAW,6BAA6B,EAAE;AACzR,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,6BAA6B;AACtD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,2DAA2D,sBAAsB;AACjF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,2DAA2D,sBAAsB;AACjF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,2DAA2D,sBAAsB;AACjF;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mGAAmG,wBAAwB,OAAO,6HAA6H;AAC/P,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,yEAAyE;AACtI,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,GAAG,YAAY;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F,iFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpdA,qC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,uC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vortex_api_1 = require(\"vortex-api\");\r\nconst path = __importStar(require(\"path\"));\r\nconst BethesdaImport_1 = __importDefault(require(\"./views/BethesdaImport\"));\r\nconst supportedGameIds = ['skyrimse', 'fallout4'];\r\nfunction main(context) {\r\n    if (process.platform !== \"win32\")\r\n        return false;\r\n    context.registerDialog('bethesda-net-import', BethesdaImport_1.default);\r\n    context.registerAction('mod-icons', 120, 'import', {}, 'Import From Bethesda.net', () => {\r\n        context.api.store.dispatch(vortex_api_1.actions.setDialogVisible('bethesda-net-import'));\r\n    }, (instanceIds) => {\r\n        const gameId = vortex_api_1.selectors.activeGameId(context.api.store.getState());\r\n        return supportedGameIds.includes(gameId);\r\n    });\r\n    context.once(() => {\r\n        context.api.setStylesheet('bethesda-net-import', path.join(__dirname, 'bethesda-net-import.scss'));\r\n    });\r\n    return true;\r\n}\r\nexports.default = main;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getBethesdaNetModData = void 0;\r\nconst vortex_api_1 = require(\"vortex-api\");\r\nconst path = __importStar(require(\"path\"));\r\nconst bluebird_1 = __importDefault(require(\"bluebird\"));\r\nconst https = __importStar(require(\"https\"));\r\nconst filePathMatcher = /data\\/([\\w\\-\\/ \\'\\(\\)]+.[a-zA-Z0-9]{3})/g;\r\nconst options = {\r\n    'method': 'GET',\r\n    'hostname': 'api.bethesda.net',\r\n    'path': '/mods/ugc-workshop/content/get?content_id=',\r\n    'headers': {},\r\n    'maxRedirects': 20,\r\n    'timeout': 10000,\r\n};\r\nfunction getBethesdaNetModData(manifestPath, creationClub) {\r\n    return vortex_api_1.fs.readdirAsync(manifestPath)\r\n        .then((manifests) => {\r\n        if (!manifests)\r\n            return bluebird_1.default.reject(`Error reading ${manifestPath}`);\r\n        return bluebird_1.default.reduce(manifests, (accum, manifest, idx) => vortex_api_1.fs.readFileAsync(path.join(manifestPath, manifest))\r\n            .then((data) => parseManifest(manifest, data.toString(), creationClub).then(m => {\r\n            accum.push(m);\r\n            return accum;\r\n        }))\r\n            .catch(err => {\r\n            vortex_api_1.log('warn', 'Error reading Bethesda.net manifest', err);\r\n            return accum;\r\n        }), []);\r\n    })\r\n        .catch(err => bluebird_1.default.reject(err));\r\n}\r\nexports.getBethesdaNetModData = getBethesdaNetModData;\r\nfunction parseManifest(manifest, data, cc) {\r\n    const matches = data.match(filePathMatcher);\r\n    if (!matches)\r\n        return bluebird_1.default.reject(`Error matching files from manifest ${manifest}`);\r\n    const files = matches.map(f => f.substr(5, f.length));\r\n    const idandVersion = path.basename(manifest, '.manifest').split('-');\r\n    const id = idandVersion[0];\r\n    const version = idandVersion[1];\r\n    const filename = files[0].substr(0, files[0].lastIndexOf('.'));\r\n    const name = filename.charAt(0).toUpperCase() + filename.slice(1);\r\n    return getApiData(parseInt(id))\r\n        .then((data) => {\r\n        const mod = {\r\n            id,\r\n            name: data ? data.name || name : name,\r\n            files,\r\n            author: data ? data.username || 'Bethesda.net' : 'Bethesda.net',\r\n            description: data ? data.description : '',\r\n            pictureUrl: data ? data.preview_file_url : '',\r\n            version: data ? data.version || version : version,\r\n            creationClub: data ? data.cc_mod : cc,\r\n            manifest\r\n        };\r\n        return mod;\r\n    });\r\n}\r\nfunction getApiData(id) {\r\n    return new bluebird_1.default((resolve, reject) => {\r\n        const reqOptions = Object.assign({}, options);\r\n        reqOptions.path = `/mods/ugc-workshop/content/get?content_id=${id}`;\r\n        const req = https.request(reqOptions, function (res) {\r\n            let chunks = [];\r\n            res.on('data', chunk => chunks.push(chunk));\r\n            res.on('end', () => {\r\n                let body = Buffer.concat(chunks);\r\n                try {\r\n                    const data = JSON.parse(body.toString());\r\n                    const details = data.platform.response.content;\r\n                    resolve(details);\r\n                }\r\n                catch (err) {\r\n                    resolve();\r\n                }\r\n            });\r\n            res.on('error', (err) => {\r\n                console.error(err);\r\n                resolve();\r\n            });\r\n        });\r\n        req.on('timeout', () => resolve());\r\n        req.on('error', (err) => resolve());\r\n        req.end();\r\n    });\r\n}\r\nexports.default = getBethesdaNetModData;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst bluebird_1 = __importDefault(require(\"bluebird\"));\r\nconst path = __importStar(require(\"path\"));\r\nconst vortex_api_1 = require(\"vortex-api\");\r\nconst shortid_1 = require(\"shortid\");\r\nconst modmeta_db_1 = require(\"modmeta-db\");\r\nfunction importMods(t, store, gamePath, mods, createArchives, progress) {\r\n    const gameId = vortex_api_1.selectors.activeGameId(store.getState());\r\n    const errors = [];\r\n    vortex_api_1.log('debug', 'Bethesda.net import starting');\r\n    const installPath = vortex_api_1.selectors.installPath(store.getState());\r\n    const downloadPath = vortex_api_1.selectors.downloadPath(store.getState());\r\n    return bluebird_1.default.mapSeries(mods, (mod, idx, len) => {\r\n        vortex_api_1.log('debug', 'transferring', mod);\r\n        const vortexId = `bethesdanet-${mod.id}-${mod.version}`;\r\n        progress(mod.name, idx / len);\r\n        return transferMod(mod, gamePath, installPath, vortexId)\r\n            .then(() => {\r\n            if (!createArchives)\r\n                return bluebird_1.default.resolve();\r\n            return createArchive(installPath, downloadPath, mod, vortexId, store)\r\n                .then(() => bluebird_1.default.resolve())\r\n                .catch(err => errors.push({ name: mod.name, errors: err }));\r\n        })\r\n            .catch(err => {\r\n            vortex_api_1.log('debug', 'Failed to import', err);\r\n            errors.push({ name: mod.name, version: mod.version, errors: err });\r\n        })\r\n            .then(() => {\r\n            if (errors.find(e => e.name === mod.name))\r\n                return bluebird_1.default.resolve();\r\n            store.dispatch(vortex_api_1.actions.addMod(gameId, toVortexMod(mod, vortexId, gameId)));\r\n            return bluebird_1.default.resolve();\r\n        });\r\n    })\r\n        .then(() => {\r\n        vortex_api_1.log('debug', 'Finished importing');\r\n        return errors;\r\n    });\r\n}\r\nfunction transferMod(mod, gamePath, installPath, vortexId) {\r\n    const modFolder = mod.creationClub ? 'Creations' : 'Mods';\r\n    const manifest = path.join(gamePath, modFolder, mod.manifest);\r\n    const stagingPath = path.join(installPath, vortexId);\r\n    const transferData = mod.files\r\n        ? mod.files.map(f => {\r\n            return {\r\n                sourcePath: path.join(gamePath, 'data', f),\r\n                destinationPath: path.join(stagingPath, f)\r\n            };\r\n        })\r\n        : [];\r\n    let errors = [];\r\n    if (mod.isAlreadyManaged) {\r\n        errors.push({ message: `This mod has already been imported. Please uninstall the current version from Vortex before importing again.` });\r\n        return bluebird_1.default.reject(errors);\r\n    }\r\n    return bluebird_1.default.all(transferData.map(t => {\r\n        return vortex_api_1.fs.statAsync(t.sourcePath).catch((err) => errors.push(err));\r\n    }))\r\n        .then(() => {\r\n        if (errors.length)\r\n            return bluebird_1.default.reject(errors);\r\n        return vortex_api_1.fs.ensureDirAsync(stagingPath).catch((err) => errors.push(err))\r\n            .then(() => {\r\n            if (errors.length)\r\n                return bluebird_1.default.reject(errors);\r\n            return bluebird_1.default.all(transferData.map(t => {\r\n                return vortex_api_1.fs.moveAsync(t.sourcePath, t.destinationPath).catch((err) => errors.push(err));\r\n            })).catch((err) => errors.push(err))\r\n                .then(() => vortex_api_1.fs.removeAsync(manifest));\r\n        });\r\n    })\r\n        .catch((err) => {\r\n        return bluebird_1.default.reject(errors);\r\n    });\r\n}\r\nfunction createArchive(installPath, downloadPath, mod, vortexId, store) {\r\n    if (mod.isAlreadyManaged)\r\n        return bluebird_1.default.resolve();\r\n    vortex_api_1.log('debug', 'Creating Archive', vortexId);\r\n    const sevenZip = new vortex_api_1.util.SevenZip();\r\n    const gameId = vortex_api_1.selectors.activeGameId(store.getState());\r\n    const archiveName = `${sanitizeForFileName(mod.name)}-${mod.id}-${mod.version}`;\r\n    const archivePath = path.join(downloadPath, `${archiveName}.7z`);\r\n    const tempPath = path.join(installPath, `${archiveName}.7z`);\r\n    const filesToPack = mod.files.map(f => path.join(installPath, vortexId, f));\r\n    mod.archiveId = shortid_1.generate();\r\n    return sevenZip.add(tempPath, filesToPack)\r\n        .then(() => {\r\n        return modmeta_db_1.genHash(tempPath)\r\n            .then((hash) => {\r\n            mod.md5hash = hash.md5sum;\r\n            return vortex_api_1.fs.statAsync(tempPath)\r\n                .then((stats) => {\r\n                store.dispatch(vortex_api_1.actions.addLocalDownload(mod.archiveId, gameId, path.basename(archivePath), stats.size));\r\n                store.dispatch(vortex_api_1.actions.setDownloadModInfo(mod.archiveId, 'name', mod.name));\r\n                store.dispatch(vortex_api_1.actions.setDownloadModInfo(mod.archiveId, 'version', mod.version));\r\n                store.dispatch(vortex_api_1.actions.setDownloadModInfo(mod.archiveId, 'game', gameId));\r\n                return vortex_api_1.fs.moveAsync(tempPath, archivePath)\r\n                    .then(() => {\r\n                    return bluebird_1.default.resolve();\r\n                });\r\n            });\r\n        });\r\n    }).catch(err => bluebird_1.default.reject([err]));\r\n}\r\nfunction toVortexMod(mod, vortexId, gameId) {\r\n    const vortexMod = {\r\n        id: vortexId,\r\n        state: 'installed',\r\n        type: '',\r\n        installationPath: vortexId,\r\n        archiveId: mod.archiveId,\r\n        attributes: {\r\n            name: mod.name,\r\n            logicalFileName: mod.name,\r\n            author: mod.author,\r\n            installTime: new Date(),\r\n            version: mod.version.toString(),\r\n            shortDescription: mod.description ? mod.description.length >= 175 ? `${mod.description.substr(0, 175)}...` : mod.description : undefined,\r\n            description: mod.description,\r\n            pictureUrl: mod.pictureUrl,\r\n            notes: 'Imported from Bethesda.net',\r\n            modId: mod.id,\r\n            fileMD5: mod.md5hash,\r\n            source: 'website',\r\n            url: `https://bethesda.net/en/mods/${bethesdaNetGameId(gameId)}/mod-detail/${mod.id}`\r\n        },\r\n    };\r\n    return vortexMod;\r\n}\r\nfunction bethesdaNetGameId(vortexGameId) {\r\n    switch (vortexGameId) {\r\n        case 'fallout4': return 'fallout4';\r\n        case 'skyrimse': return 'skyrim';\r\n        case 'skyrimspecialedition': return 'skyrim';\r\n        default: return vortexGameId;\r\n    }\r\n}\r\nfunction sanitizeForFileName(input) {\r\n    const illegalRe = /[\\/\\?<>\\\\:\\*\\|\":]/g;\r\n    const controlRe = /[\\x00-\\x1f\\x80-\\x9f]/g;\r\n    const reservedRe = /^\\.+$/;\r\n    const windowsReservedRe = /^(con|prn|aux|nul|com[0-9]|lpt[0-9])(\\..*)?$/i;\r\n    return input.replace(illegalRe, '')\r\n        .replace(controlRe, '')\r\n        .replace(reservedRe, '')\r\n        .replace(windowsReservedRe, '');\r\n}\r\nexports.default = importMods;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vortex_api_1 = require(\"vortex-api\");\r\nconst react_i18next_1 = require(\"react-i18next\");\r\nconst react_redux_1 = require(\"react-redux\");\r\nconst path = __importStar(require(\"path\"));\r\nconst React = __importStar(require(\"react\"));\r\nconst react_bootstrap_1 = require(\"react-bootstrap\");\r\nconst bethesdaImportUtil_1 = __importDefault(require(\"../util/bethesdaImportUtil\"));\r\nconst import_1 = __importDefault(require(\"../util/import\"));\r\nclass BethesdaImport extends vortex_api_1.ComponentEx {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nop = () => undefined;\r\n        this.cancel = () => {\r\n            this.props.onHide();\r\n        };\r\n        this.next = () => {\r\n            const { importStep } = this.state;\r\n            const currentIdx = BethesdaImport.STEPS.indexOf(importStep);\r\n            this.setStep(BethesdaImport.STEPS[currentIdx + 1]);\r\n        };\r\n        this.previous = () => {\r\n            const { importStep } = this.state;\r\n            const currentIdx = BethesdaImport.STEPS.indexOf(importStep);\r\n            this.setStep(BethesdaImport.STEPS[currentIdx - 1]);\r\n        };\r\n        this.initState({\r\n            importStep: undefined,\r\n            importEnabled: {},\r\n            failedImports: [],\r\n            counter: 0,\r\n            modsToImport: {},\r\n            importCC: false,\r\n            createArchives: true,\r\n            ccCount: 0,\r\n            modCount: 0\r\n        });\r\n        this.mActions = this.genActions();\r\n        this.mAttributes = this.genAttributes();\r\n    }\r\n    ;\r\n    UNSAFE_componentWillReceiveProps(newProps) {\r\n        if (!this.props.visible && newProps.visible) {\r\n            this.start();\r\n            this.nextState.importCC = false;\r\n            this.nextState.createArchives = true;\r\n            this.nextState.modsToImport = {};\r\n        }\r\n    }\r\n    start() {\r\n        const { t } = this.props;\r\n        const { discovered, gameId } = this.props;\r\n        this.nextState.importStep = 'start';\r\n        this.nextState.error = undefined;\r\n        this.nextState.modsToImport = {};\r\n        const gamePath = discovered[gameId].path;\r\n        this.nextState.gamePath = gamePath;\r\n        this.nextState.bethesdaModManifestPath = path.join(gamePath, 'Mods');\r\n        this.nextState.bethesdaCCManifestPath = path.join(gamePath, 'Creations');\r\n        return vortex_api_1.fs.readdirAsync(path.join(gamePath, 'Creations'))\r\n            .catch(() => null)\r\n            .then((ccContent) => {\r\n            this.nextState.ccCount = ccContent ? ccContent.length : 0;\r\n            vortex_api_1.fs.readdirAsync(path.join(gamePath, 'Mods'))\r\n                .then(manifests => {\r\n                const total = ccContent ? manifests.concat(ccContent) : manifests;\r\n                this.nextState.modCount = manifests ? manifests.length : 0;\r\n                if (!total.length)\r\n                    this.nextState.error = (React.createElement(\"span\", null,\r\n                        React.createElement(\"h3\", null, t('No mods detected')),\r\n                        t('You do not appear to have any mods from Bethesda.net installed.')));\r\n                return Promise.resolve();\r\n            })\r\n                .catch(err => {\r\n                if (err.code === 'ENOENT') {\r\n                    if (this.state.ccCount)\r\n                        return Promise.resolve();\r\n                    this.nextState.error = (React.createElement(\"span\", null,\r\n                        React.createElement(\"h3\", null, t('No mods detected')),\r\n                        t('You do not appear to have any mods from Bethesda.net installed.')));\r\n                }\r\n                else {\r\n                    this.nextState.error = (React.createElement(\"span\", null,\r\n                        React.createElement(\"h3\", null, t('An unknown error occured')),\r\n                        t('The following error occurred while attempting to locate the Bethesda.net mod manifests.'),\r\n                        err.code,\r\n                        \" - \",\r\n                        err.message));\r\n                }\r\n            });\r\n        });\r\n    }\r\n    setup() {\r\n        const { bethesdaCCManifestPath, bethesdaModManifestPath, importCC } = this.state;\r\n        const { mods, t } = this.props;\r\n        return bethesdaImportUtil_1.default(bethesdaModManifestPath, false)\r\n            .catch(() => null)\r\n            .then((bnMods) => {\r\n            if (!importCC) {\r\n                this.nextState.modsToImport = convertModArray(bnMods, mods);\r\n                return Promise.resolve();\r\n            }\r\n            return bethesdaImportUtil_1.default(bethesdaCCManifestPath, true)\r\n                .then((ccMods) => {\r\n                const allMods = bnMods ? bnMods.concat(ccMods) : ccMods;\r\n                this.nextState.modsToImport = convertModArray(allMods, mods);\r\n                return Promise.resolve();\r\n            })\r\n                .catch(err => {\r\n                if (bnMods.length) {\r\n                    this.nextState.modsToImport = convertModArray(bnMods, mods);\r\n                    return Promise.resolve();\r\n                }\r\n                ;\r\n                this.nextState.error = (React.createElement(\"span\", null,\r\n                    React.createElement(\"h3\", null, t('An unknown error occured')),\r\n                    t('The following error occurred while attempting to identify Bethesda.net mods.'),\r\n                    err.code,\r\n                    \" - \",\r\n                    err.message));\r\n                return Promise.resolve();\r\n            });\r\n        });\r\n    }\r\n    startImport() {\r\n        const { t } = this.props;\r\n        const { modsToImport, gamePath, createArchives } = this.state;\r\n        const modList = modsToImport ? Object.keys(modsToImport).map(id => modsToImport[id]) : [];\r\n        const enabledMods = modList.filter(mod => this.isModEnabled(mod));\r\n        import_1.default(t, this.context.api.store, gamePath, enabledMods, createArchives, (mod, perc) => {\r\n            this.nextState.progress = { mod, perc };\r\n        })\r\n            .then(errors => {\r\n            this.nextState.failedImports = errors;\r\n            this.setStep('review');\r\n        });\r\n        return Promise.resolve();\r\n    }\r\n    render() {\r\n        const { t, visible } = this.props;\r\n        const { error, importStep } = this.state;\r\n        const canCancel = ['start', 'setup', 'working'].indexOf(importStep) !== -1;\r\n        return (React.createElement(vortex_api_1.Modal, { id: 'bethesda-import-dialog', show: visible, onHide: this.nop },\r\n            React.createElement(vortex_api_1.Modal.Header, null,\r\n                React.createElement(\"h2\", null, t('Bethesda.net Import Tool')),\r\n                this.renderSteps(importStep)),\r\n            React.createElement(vortex_api_1.Modal.Body, null, error !== undefined ? React.createElement(react_bootstrap_1.Alert, null, error) : this.renderContent(importStep)),\r\n            React.createElement(vortex_api_1.Modal.Footer, null,\r\n                React.createElement(react_bootstrap_1.Button, { disabled: !canCancel, onClick: this.cancel }, t('Cancel')),\r\n                React.createElement(react_bootstrap_1.Button, { disabled: this.previousDisabled(), onClick: this.previous }, t('Previous')),\r\n                React.createElement(react_bootstrap_1.Button, { disabled: this.nextDisabled(), onClick: this.next }, importStep === 'review' ? t('Finish') : t('Next')))));\r\n    }\r\n    nextDisabled() {\r\n        const { error, importStep, importEnabled, importCC, ccCount, modCount } = this.state;\r\n        const startModsCount = importCC ? ccCount + modCount : modCount;\r\n        return (error !== undefined) || (['wait', 'working'].includes(importStep))\r\n            || ((importStep === 'start') && (!startModsCount))\r\n            || ((importStep === 'setup') && (Object.keys(importEnabled).filter(key => importEnabled[key] === true).length) === 0);\r\n    }\r\n    previousDisabled() {\r\n        const { error, importStep } = this.state;\r\n        return (error !== undefined) || (['wait', 'start', 'working', 'review'].includes(importStep));\r\n    }\r\n    setStep(newStep) {\r\n        this.nextState.importStep = 'wait';\r\n        let job = Promise.resolve();\r\n        if (newStep === 'start') {\r\n            job = this.start();\r\n        }\r\n        else if (newStep === 'setup') {\r\n            job = this.setup();\r\n        }\r\n        else if (newStep === 'working') {\r\n            job = this.startImport();\r\n        }\r\n        else if (newStep === undefined) {\r\n            this.props.onHide();\r\n        }\r\n        job.then(() => this.nextState.importStep = newStep);\r\n    }\r\n    renderSteps(step) {\r\n        const { t } = this.props;\r\n        const { importStep } = this.state;\r\n        return (React.createElement(vortex_api_1.Steps, { step: importStep, style: { marginBottom: 32 } },\r\n            React.createElement(vortex_api_1.Steps.Step, { key: 'start', stepId: 'start', title: t('Start'), description: t('Introduction') }),\r\n            React.createElement(vortex_api_1.Steps.Step, { key: 'setup', stepId: 'setup', title: t('Setup'), description: t('Select Mods to import') }),\r\n            React.createElement(vortex_api_1.Steps.Step, { key: 'working', stepId: 'working', title: t('Import'), description: t('Magic happens') }),\r\n            React.createElement(vortex_api_1.Steps.Step, { key: 'review', stepId: 'review', title: t('Review'), description: t('Import result') })));\r\n    }\r\n    ;\r\n    renderContent(step) {\r\n        switch (step) {\r\n            case 'wait': return this.renderWait();\r\n            case 'start': return this.renderStart();\r\n            case 'setup': return this.renderSelectMods();\r\n            case 'working': return this.renderWorking();\r\n            case 'review': return this.renderReview();\r\n            default: return null;\r\n        }\r\n    }\r\n    renderWait() {\r\n        return (React.createElement(\"div\", { className: 'bethesda-wait-container' },\r\n            React.createElement(vortex_api_1.Spinner, { className: 'page-wait-spinner' })));\r\n    }\r\n    renderStart() {\r\n        const { t } = this.props;\r\n        const { importCC, createArchives, ccCount, modCount } = this.state;\r\n        const state = this.context.api.store.getState();\r\n        const networkState = state.session.base.networkConnected;\r\n        return (React.createElement(\"span\", { className: 'bethesda-start' },\r\n            React.createElement(\"img\", { src: `file://${__dirname}/beth-to-vortex.png` }),\r\n            React.createElement(\"h3\", null, t('Bring your Bethesda.net mods to Vortex')),\r\n            React.createElement(\"p\", null, t('This tool will allow you to import mods installed through Bethesda.net into Vortex.')),\r\n            React.createElement(\"p\", null, t('Vortex has detected {{mods}} mods and {{cc}} Creation Club DLCs.', { replace: { mods: modCount, cc: ccCount } })),\r\n            React.createElement(\"div\", null,\r\n                t('Before you continue, please be aware of the following:'),\r\n                React.createElement(\"ul\", null,\r\n                    React.createElement(\"li\", null, t('Vortex will attempt to important some basic mod information for Bethesda.net but this data may be incomplete.')),\r\n                    React.createElement(\"li\", null, t('Once imported, the mods will be removed from Bethesda.net but may still appear in \"My Library\".')),\r\n                    React.createElement(\"li\", null, t('Imported mods will not be updated when a new version is posted on Bethesda.net.')),\r\n                    !networkState ? (React.createElement(\"li\", null,\r\n                        React.createElement(\"b\", { style: { color: 'var(--brand-warning)' } }, t('You are offline! No data will be imported from Bethesda.net')))) : '')),\r\n            React.createElement(\"h4\", null, t('Options')),\r\n            React.createElement(react_bootstrap_1.Checkbox, { id: 'archives', checked: createArchives, title: t('Vortex will create compressed (zipped) archives of imported mods in the downloads folder, so they can be reinstalled.'), onChange: () => this.nextState.createArchives = !createArchives }, t('Create archives for imported mods')),\r\n            React.createElement(react_bootstrap_1.Checkbox, { id: 'includeCC', checked: importCC, title: t('Import mini-DLCs purchased from the Creation Club store as mods.'), onChange: () => this.nextState.importCC = !importCC, disabled: ccCount === 0 }, t('Include Creation Club content'))));\r\n    }\r\n    renderWorking() {\r\n        const { t } = this.props;\r\n        const { progress } = this.state;\r\n        if (progress === undefined)\r\n            return null;\r\n        const perc = Math.floor(progress.perc * 100);\r\n        return (React.createElement(\"div\", { className: 'bethesda-import-container' },\r\n            React.createElement(\"span\", null, t('Currently importing: {{mod}}', { replace: { mod: progress.mod } })),\r\n            React.createElement(react_bootstrap_1.ProgressBar, { now: perc, label: `${perc}%` }),\r\n            React.createElement(\"span\", null, t('This can take a while if the Bethesda.net API is being slow.'))));\r\n    }\r\n    renderSelectMods() {\r\n        const { t } = this.props;\r\n        const { counter, modsToImport } = this.state;\r\n        return (React.createElement(\"div\", { style: { display: 'flex', flexDirection: 'column', height: '100%', width: '100%' } },\r\n            React.createElement(vortex_api_1.Table, { tableId: 'bethesda-mod-imports', data: modsToImport, dataId: counter, actions: this.mActions, staticElements: this.mAttributes })));\r\n    }\r\n    renderReview() {\r\n        const { t } = this.props;\r\n        const { failedImports } = this.state;\r\n        return (React.createElement(\"div\", { className: 'bethesda-import-container' }, failedImports.length === 0\r\n            ? (React.createElement(\"span\", { className: 'import-success' },\r\n                React.createElement(vortex_api_1.Icon, { name: 'feedback-success' }),\r\n                t('Import completed successfully')))\r\n            : (React.createElement(\"span\", null,\r\n                React.createElement(\"span\", { className: 'import-warning' },\r\n                    React.createElement(vortex_api_1.Icon, { name: 'feedback-warning' }),\r\n                    t('Import completed with errors')),\r\n                React.createElement(\"span\", { className: 'import-warning-group' }, t('The import process encountered the following errors. You should fix any errors before retrying. Most issues can be solved by reinstalling the mods through Bethesda.net')),\r\n                this.renderErrors()))));\r\n    }\r\n    renderErrors() {\r\n        const { t } = this.props;\r\n        const { failedImports } = this.state;\r\n        return (React.createElement(\"span\", null, failedImports.map(f => {\r\n            return (React.createElement(\"div\", { key: `errors-${f.name}`, className: 'import-warning-group' },\r\n                React.createElement(\"b\", null,\r\n                    \"Errors importing \\\"\",\r\n                    f.name,\r\n                    \"\\\" (v\",\r\n                    f.version,\r\n                    \")\"),\r\n                React.createElement(\"ul\", null, f.errors ? f.errors.map(e => (React.createElement(\"li\", { key: `errors-${f.name}-${f.errors.indexOf(e)}` }, e.message))) : React.createElement(\"li\", null, t('Unknown error! \\n {{details}}', { replace: { details: JSON.stringify(f) } })))));\r\n        })));\r\n    }\r\n    isModEnabled(mod) {\r\n        return (this.state.importEnabled[mod.id] && this.state.importEnabled[mod.id] !== false);\r\n    }\r\n    genActions() {\r\n        return [\r\n            {\r\n                icon: 'checkbox-checked',\r\n                title: 'Import',\r\n                action: (instanceIds) => {\r\n                    instanceIds.forEach(id => this.nextState.importEnabled[id] = true);\r\n                    ++this.nextState.counter;\r\n                },\r\n                singleRowAction: false\r\n            },\r\n            {\r\n                icon: 'checkbox-unchecked',\r\n                title: 'Skip',\r\n                action: (instanceIds) => {\r\n                    instanceIds.forEach(id => this.nextState.importEnabled[id] = false);\r\n                    ++this.nextState.counter;\r\n                },\r\n                singleRowAction: false\r\n            }\r\n        ];\r\n    }\r\n    genAttributes() {\r\n        return [\r\n            {\r\n                id: 'status',\r\n                name: 'Import',\r\n                description: 'The import status of this mod.',\r\n                icon: 'level-up',\r\n                calc: mod => this.isModEnabled(mod) ? 'Import' : 'Skip',\r\n                placement: 'table',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                isVolatile: true,\r\n                edit: {\r\n                    inline: true,\r\n                    choices: () => [\r\n                        { key: 'yes', text: 'Import' },\r\n                        { key: 'no', text: 'Skip' }\r\n                    ],\r\n                    onChangeValue: (mod, value) => {\r\n                        this.nextState.importEnabled[mod.id] = !(!!this.state.importEnabled[mod.id] && this.state.importEnabled[mod.id] !== false);\r\n                        ++this.nextState.counter;\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                id: 'name',\r\n                name: 'Mod Name',\r\n                description: 'The mod title.',\r\n                icon: 'quote-left',\r\n                calc: (mod) => mod.name,\r\n                placement: 'both',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                edit: {},\r\n                sortFunc: (lhs, rhs, locale) => {\r\n                    return lhs.localeCompare(rhs, locale, { sensitivity: 'base' });\r\n                }\r\n            },\r\n            {\r\n                id: 'version',\r\n                name: 'Version',\r\n                description: 'The Bethesda.net version of this mod.',\r\n                icon: 'id-badge',\r\n                calc: (mod) => mod.version,\r\n                placement: 'both',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                isDefaultVisible: false,\r\n                edit: {}\r\n            },\r\n            {\r\n                id: 'author',\r\n                name: 'Author',\r\n                description: 'The Bethesda.net author of this mod.',\r\n                icon: 'id-badge',\r\n                calc: (mod) => mod.author,\r\n                placement: 'both',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                isDefaultVisible: true,\r\n                edit: {},\r\n                sortFunc: (lhs, rhs, locale) => {\r\n                    return lhs.localeCompare(rhs, locale, { sensitivity: 'base' });\r\n                }\r\n            },\r\n            {\r\n                id: 'id',\r\n                name: 'Bethesda.net ID',\r\n                description: 'The Bethesda.net ID of this mod.',\r\n                icon: 'id-badge',\r\n                calc: (mod) => mod.id,\r\n                placement: 'both',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                isDefaultVisible: false,\r\n                edit: {},\r\n                sortFunc: (lhs, rhs, locale) => {\r\n                    return lhs.localeCompare(rhs, locale, { sensitivity: 'base' });\r\n                }\r\n            },\r\n            {\r\n                id: 'exists',\r\n                name: 'Already Imported',\r\n                description: 'Has this mod already been imported?',\r\n                icon: 'level-up',\r\n                customRenderer: (mod, detail) => {\r\n                    return mod.isAlreadyManaged ? (React.createElement(vortex_api_1.tooltip.Icon, { id: `already-managed-${mod.id}`, tooltip: 'This mod has already been imported. \\nYou must uninstall it before importing again.', name: 'feedback-warning' })) : null;\r\n                },\r\n                calc: mod => mod.isAlreadyManaged,\r\n                placement: 'table',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                edit: {}\r\n            },\r\n            {\r\n                id: 'modType',\r\n                name: 'Type',\r\n                description: 'Is this a CC mod?',\r\n                icon: 'level-up',\r\n                calc: (mod) => mod.creationClub ? 'Creation Club Content' : 'Bethesda.net Mod',\r\n                placement: 'detail',\r\n                isToggleable: true,\r\n                isSortable: true,\r\n                edit: {},\r\n                condition: () => this.state.importCC\r\n            },\r\n            {\r\n                id: 'files',\r\n                name: 'Mod Files',\r\n                description: 'Files added by this mod.',\r\n                icon: 'id-badge',\r\n                calc: (mod) => mod.files.length,\r\n                customRenderer: (mod, detail) => {\r\n                    return (React.createElement(\"textarea\", { className: 'form-control', readOnly: true, value: mod.files.join('\\n') }));\r\n                },\r\n                isSortable: false,\r\n                placement: 'detail',\r\n                edit: {}\r\n            }\r\n        ];\r\n    }\r\n}\r\nBethesdaImport.STEPS = ['start', 'setup', 'working', 'review'];\r\nfunction convertModArray(mods, vortexMods) {\r\n    const mappedObject = {};\r\n    if (!mods || !mods.length)\r\n        return mappedObject;\r\n    mods.map(mod => {\r\n        mappedObject[mod.id] = mod;\r\n        if (!!vortexMods[`bethesdanet-${mod.id}-${mod.version}`])\r\n            mappedObject[mod.id].isAlreadyManaged = true;\r\n        return mod;\r\n    });\r\n    return mappedObject;\r\n}\r\nfunction mapStateToProps(state) {\r\n    const gameId = vortex_api_1.selectors.activeGameId(state);\r\n    const game = vortex_api_1.selectors.gameById(state, gameId);\r\n    const steamAppId = vortex_api_1.util.getSafe(game, ['details', 'steamAppId'], undefined);\r\n    return {\r\n        steamAppId,\r\n        gameId,\r\n        discovered: vortex_api_1.util.getSafe(state, ['settings', 'gameMode', 'discovered'], {}),\r\n        mods: vortex_api_1.util.getSafe(state, ['persistent', 'mods', gameId], {}),\r\n    };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {};\r\n}\r\nexports.default = react_i18next_1.withTranslation(['common'])(react_redux_1.connect(mapStateToProps, mapDispatchToProps)(BethesdaImport));\r\n","module.exports = require(\"bluebird\");","module.exports = require(\"https\");","module.exports = require(\"modmeta-db\");","module.exports = require(\"path\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-i18next\");","module.exports = require(\"react-redux\");","module.exports = require(\"vortex-api\");"],"sourceRoot":""}